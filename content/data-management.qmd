---
title: Data Management
---

Glider data management is a complex endeavor. Gliders contain many moving parts, and can collect over a terabyte of data in a single deployment. This page outlines the ESD glider data management efforts, including directory structures and storage locations for different types of data.

This page provides the in-the-weeds data management details, which will likely only be relevant for ESD glider lab members. Users looking for more general information about glider data products should go to the respective data type pages via the sidebar menu. 

## Quick Links

Google Drive (NOAA internal only) :

- [AMLR Gliders](https://drive.google.com/drive/folders/1wv2wGgWco_3heUR7JPVMc3KLGFCzkcBT) 
- [ESD glider data locations slides](https://docs.google.com/presentation/d/1ccMxCOCY8buNoaoQmLMc1iFEqeswLgAp895v6F202Og/edit?usp=sharing)
- [AMLR Gliders Photos](https://photos.app.goo.gl/aKpRbVCKkJTkfcQ69)

Google Cloud Storage (GCS) buckets:

- [Deployments](https://console.cloud.google.com/storage/browser/amlr-gliders-deployments-dev)
- [Acoustics](https://console.cloud.google.com/storage/browser/amlr-gliders-acoustics-dev)
- [Raw imagery](https://console.cloud.google.com/storage/browser/amlr-gliders-imagery-raw-dev)
- [Pre-processed imagery](https://console.cloud.google.com/storage/browser/amlr-gliders-imagery-proc-dev) (Images pre-processed by Randy's code)

For direct links to existing ESD glider data stored in GCS buckets, see the [Deployments](deployments.qmd) page.

Glider & Mooring Database:

- [Database access and use](https://docs.google.com/document/d/1mKMjSfp_QYXo66buBBd0NiJ7NqUk52FV95NxSW766Vc/edit?usp=sharing) (NOAA only)

## Data Management Plan

This section describes what files go where, as well as required directory structures. It replaces the [AMLR Glider Data Management Plan](https://docs.google.com/document/d/1dW5ZdkOpTz59xy4xs8ypVOvGLWBYZMdlbwGJty4PTV0/edit?usp=sharing) Google doc. 

[These slides](https://docs.google.com/presentation/d/1ccMxCOCY8buNoaoQmLMc1iFEqeswLgAp895v6F202Og/edit?usp=sharing) (NOAA internal only) describe and link to the various homes for different pieces of ESD glider data, for additional references. Several of these data homes are described in more detail below.

### Glider & Mooring Database

The glider and mooring database is a SQL Server database, hosted on the internal SWFSC network. This database exists to track all of the glider/instrument (and mooring) parts and builds. Each glider deployment is represented as a build, and each build includes links to all of the different parts that were on that glider for the deployment. The rest of this section provides high-level guidance for how to use the Glider & Mooring Database; see [this document](https://docs.google.com/document/d/1mKMjSfp_QYXo66buBBd0NiJ7NqUk52FV95NxSW766Vc/edit?usp=sharing) for more details, including database access instructions for both database users and managers.

#### Devices

For this database, 'device' means any piece of glider, instrument, mooring, etc, that needs to be tracked. Devices can be created by clicking the 'Devices' button from the database home page, and then using the form that pops up. Note that any new device types must be added using the 'Device Types' form.

All new devices should be added to the database as soon as they arrive at the SWFSC. Created devices can then be added to a glider build, to track which devices were part of which deployments.

Note: Currently there is no way to track software versions of a 'device' in the database. Some of this info is tracked via the [Fleet Status](https://docs.google.com/spreadsheets/d/1tB3QNKYx8qOYYS9QZotekBAx0y-_n2d-EZPjFFdYNuU/edit?usp=sharing) page (NOAA internal only), but it should be formally added to the database as time permits.

#### Gliders

A glider build functionally allows ESD to create a collection of devices and files, which they can then associate with a deployment. A deployment build tracks the glider software version, deployment start date and end date, and the number of profiles (yos) performed during the deployment. Glider builds should be created 1) when a glider is first acquired, 2) before a glider is deployed, and 3) when a relatively whole glider is sent in for service. Again, see the [database Google doc](https://docs.google.com/document/d/1mKMjSfp_QYXo66buBBd0NiJ7NqUk52FV95NxSW766Vc/edit?usp=sharing) for more details.

#### Calibrations

All factory calibration documents are now stored in the [glider-lab repo](https://github.com/SWFSC/glider-lab/tree/main/calibration-docs). 

Although some records for acoustic calibrations performed in the SWFSC tech tank are in the database, most are currently recorded and tracked by Tony.

#### Files

All factory calibration documents are now stored in the [glider-lab repo](https://github.com/SWFSC/glider-lab/tree/main/calibration-docs). 

Other files associated with a deployment (e.g., autoexec and proglet files, or config files associated with certain instruments) are currently stored in the database, but will likely be moved to a more accessible location in the future.

### AMLR Gliders Google Drive

The [AMLR Gliders Google Drive](https://drive.google.com/drive/folders/1wv2wGgWco_3heUR7JPVMc3KLGFCzkcBT?usp=drive_link) ... {full description todo}

#### Glider Deployments

The [Glider Deployments](https://drive.google.com/drive/folders/1qfKMxXH0hUhbmOp8aESidz-YO3IPxWM3?usp=drive_link) folder is for working files during both deployment prep, and the deployment itself. It provides an easy place (i.e., easier than Google Cloud) for ESD glider team members to collaborate on and refer to different files. These files live in 'GDrive deployment prep folders'; the Glider Deployments folder contains GDrive folder templates. 

For new deployments, a template exists in the [Templates](https://drive.google.com/drive/folders/10QGrMjwwr5uZ-AISQtSBo0Hsm2zGnq0i?usp=drive_link) folder. 

The structure of an individual GDrive deployment prep folder:

```
glider-YYYYmmdd-prep
├── acoustic-prep
├── deployment-files
├── glider-prep
    ├── final-seal-photos
    ├── functional-checkout-data
    ├── tech-tank-data
├── imagery-prep
├── photos
```


- acoustic-prep: acoustic prep files from pre-deployment tests. These may include sample data files, relevant tests, etc.
- deployment-files: a catch-all folder for other files from the deployment
- glider-prep Folders and files from the glider prep. In addition to the folders described below, the 'prep' folder may include the ballast sheet, or compass calibration files.
    - final-seal-photos: photos of the final seals of the glider
    - functional-checkout-data: functional checkout sheet, data files from test tank dive, and any other files/notes from the functional checkout
    - tech-tank-data: data files from the tech tank, if relevant
- imagery-prep: imagery (camera) prep files from pre-deployment tests. These may include sample images, relevant tests, etc.
- photos: folder for miscellaneous photos. These could include photos of the glider seal, or photos of the glider deployment and recovery. 

Miscellaneous files that should stay associated with the deployment, but do not belong in the GCS buckets, can go directly in the GDrive glider-YYYYmmdd-prep folder. 

###  glider-lab repository

The [glider-lab](https://github.com/SWFSC/glider-lab) repository has evolved into a place to store a) reference documents that can be accessible to folks outside NOAA and b) files used for processing in GCP. These include:

- calibration-docs: factory calibration documents for glider instruments
- deployment-configs: yaml configuration files for glider data processing
- deployment-reports: post-deployment reports, created as Quarto documents
- deployment-scripts: Python scripts for processing the glider data.
- echoview-glider-calib-files: calibration files used for processing acoustic data using [Echoview](https://echoview.com/)

See the [repo readme](https://github.com/SWFSC/glider-lab/blob/main/README.md) for full folder descriptions.

###  standard-glider-files repository

The [standard-glider-files](https://github.com/SWFSC/standard-glider-files) repository contains standard files that are put on ESD gliders before deployment. This repo and these files are also commonly used during ESD lab tests.

### GCS Buckets

Data processing code depends on a specific directory structure, and thus it is important that data in GCS buckets follow the format described below. All GCS buckets used for storing glider data follow the same top-level directory structure of 'PROJECT/YYYY/glider-YYYYmmdd':

- **PROJECT**: Data are first grouped by [project](deployments.qmd#projects)
- **YYYY**: Within each project folder are year folders, of the format YYYY (e.g., "2025"). For FREEBYRD (i.e., Antarctic) deployments, the January year is used. For instance, a glider deployed deployed in Dec 2022 will be in the 'FREEBYRD/2023' directory.
- **glider-YYYYmmdd**: Within each year folder are deployment folders. The deployment folders all follow the same naming convention: 'glider-YYYYmmdd', where 'glider' is the name of the glider and 'YYYYmmdd' is the deployment date. For example, the folder name for the glider calanus that was deployed on 19 Oct 2024 is "calanus-20241019".

For new deployments, a template folder strucutre for uploading data to GCP exists in the [Templates](https://drive.google.com/drive/folders/10QGrMjwwr5uZ-AISQtSBo0Hsm2zGnq0i?usp=drive_link) folder. 

GCS buckets are only accessible to individuals with a noaa.gov email address that have been added to the GCP project as a data viewer. To access data in GCS buckets, please contact [Sam Woodman](mailto:sam.woodman@noaa.gov). 

Each section below corresponds to an individual GCS bucket. They begin with a directory outline, followed by text that explains each directory. Principles that are consistent across buckets include:

- Several folders contain "delayed" and "rt" subfolders. Delayed mode data were collected or generated after the glider was recovered, while rt (i.e., realtime) data were transmitted or generated while the glider was deployed.
- Several folders contain an 'ngdac' subfolder. This subfolder contains NetCDF files formatted for submission to the [IOOS Glider DAC](https://ioos.github.io/ioosngdac/index.html). The DAC requires one NetCDF file for each profile, hence the subfolder.

#### Deployments

The structure of an individual deployment folder, located in the [Deployments](https://console.cloud.google.com/storage/browser/amlr-gliders-deployments-dev) bucket under a 'PROJECT/YYYY/glider-YYYYmmdd' path:

```         
├── archive-sfmc
├── backup
├── data
    ├── binary
        ├── delayed
        ├── rt
    ├── processed-rt
        ├── ngdac
    ├── processed-L1
        ├── ngdac
    ├── processed-L2
├── plots
    ├── delayed
        ├── TS-sci
        ├── maps-sci
        ├── pointMaps
        ├── spatialGrids-sci
        ├── spatialSections-sci
        ├── thisVsThat-eng
        ├── timeSections-sci
        ├── timeSections-sci-gt
        ├── timeSeries-eng
        ├── timeSeries-sci
    ├── rt
        ├── ... : same subfolders as 'plots/delayed' folder
```

**archive-sfmc**: The 'archive' folder, synced or downloaded from the SFMC. This folder contains all files sent to the glider during the deployment, with an associated timestamp as part of the file name. Among other things, this folder is used for generating a sensor config table for the post-deployment report.

**backup**: Backup files/folders from the deployment. These typically include zipped copies of the Flight and Science folders from the glider cards, as well as the Glider Folder Archive Tar Ball from the SFMC. 

**data** Raw glider data, and processed glider data products:

- **binary**: Binary data files generated by the glider. This folder should include dbd/ebd/dcd/ecd (for delayed data) or sbd/tbd/scd/tcd (for rt data) files. Note that there is not a different path for compressed files, meaning for instance that dcd/ecd files should go directly in the 'data/binary/delayed' folder. 
- **processed-rt**: "Real-time" processed data and data products, created using real-time glider data (i.e., sbd/tbd files) transmitted by the glider during its deployment.
- **processed-L1**: "Level 1" processed data and data products. "Level 1" means that these data products were created by the esdglider/pyglider base processing functions (link TODO) using delayed mode data. In other words, the dbd/ebd files were used as input data, and there was minimal data qa/qc or corrections performed.
- **processed-L2**: "Level 2" processed data and data products. "Level 2" means that the data has undergone additional qa/qc and/or processing, beyond what is performed during base processing. Due to lack of personnel, at this time most ESD glider deployments will not have level 2 processed data.

**plots**: Standard plots generated from either the 'processed-rt' (subfolder 'rt') or 'processed-L1' data (subfolder 'delayed'). Note that 'sci' is short for plots of science sensor values, while 'eng' is short for plots of engineering variables. See [plots](glider-data.qmd#plots) for descriptions of the various folders.

#### Acoustics

The structure of an individual deployment folder for acoustics, located in the [Acoustics](https://console.cloud.google.com/storage/browser/amlr-gliders-acoustics-dev) bucket under a 'PROJECT/YYYY/glider-YYYYmmdd' path:

```         
├── data
    ├── delayed
    ├── rt
    ├── processed-echoview
├── config
├── metadata
    ├── echoview
```

**data/delayed**: Raw acoustic delayed data, from either AZFPs or Echosounders

**data/rt**: Raw real-time ad2 files. For Nortek instruments only

**data/processed-echoview**: Folder for Echoview outputs. For instance, Echoview export files, and the gridded NetCDF file with appended acoustic data

**config**: config file(s) used during the deployment

**metadata/echoview**: metadata files for Echoview, generated by base glider processing code

#### Raw Imagery

The structure of an individual deployment folder for raw imagery, for shadowgraph or glidercam imagery, located in the [Raw imagery](https://console.cloud.google.com/storage/browser/amlr-gliders-imagery-raw-dev) bucket under a 'PROJECT/YYYY/glider-YYYYmmdd' path:

```
├── images
├── config
├── metadata
```

**images**: All imagery collected during the deployment. These images will be in their 'Dir####' folders, as they were recorded on the imagery cards.

**config**: config file(s) used during the deployment

**metadata**: image metadata file, generated by base glider processing code. This file is a CSV with one row for each image, and columns representing the glider data values interpolated to the timestamp of the image.

#### Pre-Processed Imagery

The directory structure for the [pre-processed imagery](https://console.cloud.google.com/storage/browser/amlr-gliders-imagery-proc-dev) bucket is described on the [Imagery](imagery.qmd) page.
